unlist(res)
i=1
for(i in 1:N){#
	if(i==1) {#
		res[[i]] <- median((1):xser[i])#
	} else {#
		res[[i]] <- median((x0+1):xser[i])#
	}#
}
unlist(res)
distAA.mdt0        <- Biostrings::stringDist(aa.alignment.mdt0, upper=T,diag=T)
class(distAA.mdt0)
length(distAA.mdt0)
54*54
(54*54)/2
(54*53)/2
test <- matrix(data=NA,nrow=54,ncol=54)
lower.tri(test) <- as.numeric(distAA.mdt0)
test <- matrix(data=NA,nrow=54,ncol=54)
dim(test)
length(lower.tri(test) )
class(lower.tri(test))
test[lower.tri(test)] <- as.numeric(distAA.mdt0)
test[1:5,1:5]
distAA.mdt0        <- Biostrings::stringDist(aa.alignment.mdt0, upper=T,diag=T)#
				distAA.mdt0.mat    <- matrix(nrow=length(aa.alignment.mdt0), ncol=length(aa.alignment.mdt0))#
				distAA.mdt0.mat[lower.tri(distAA.mdt0.mat)] <- as.numeric(distAA.mdt0)
dim(distAA.mdt0.mat)
library(triangle)
colnames(distAA.mdt0.mat) <- rownames(distAA.mdt0.mat) <- labels(aa.alignment.mdt0)
test[1:5,1:5]
distAA.mdt0.mat[1:5,1:5]
distAA.mdt0.mat[upper.tri(distAA.mdt0.mat)] <- t(distAA.mdt0.mat)[upper.tri(distAA.mdt0.mat)]
distAA.mdt0.mat[1:5,1:5]
unname(distAA.mdt0.mat)[1:5,1:5]
distAA.mdt0        <- Biostrings::stringDist(aa.alignment.mdt0, upper=T,diag=T)#
				# Move distance data to a matrix#
				distAA.mdt0.mat    <- matrix(nrow=length(aa.alignment.mdt0), ncol=length(aa.alignment.mdt0))#
				distAA.mdt0.mat[lower.tri(distAA.mdt0.mat)] <- as.numeric(distAA.mdt0)#
				# reflect lower triangle to make symmetric, then add row labels#
				distAA.mdt0.mat[upper.tri(distAA.mdt0.mat)] <- t(distAA.mdt0.mat)[upper.tri(distAA.mdt0.mat)]#
				rownames(distAA.mdt0.mat) <- labels(aa.alignment.mdt0)#
				# median for each row#
				median.distAA.mdt0 <- apply(distAA.mdt0.mat,1,median)
median.distAA.mdt0
median.distAA.mdt0 <- apply(distAA.mdt0.mat,1,median,na.rm=T)
median.distAA.mdt0
median.distAA.mdt0 <- apply(distAA.mdt0.mat,1,median,na.rm=T)/width(aa.alignment.mdt0[1])
median.distAA.mdt0
toDrop <- which(median.distAA.mdt0 > AA.pdist.drop.thresh)
AA.pdist.drop.thresh=0.5
toDrop <- which(median.distAA.mdt0 > AA.pdist.drop.thresh)
toDrop
devtools(document)
devtools::document()
BiocManager::install("JeffWeinell/REEs",update=FALSE, dependencies=c("Depends", "Imports", "LinkingTo"),build_vignettes=F,Ncpus=4,auth_token="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")
TargetCDS.path="/Users/jeff/Documents/GitHub/SnakeCap/PostSequencing/Partitioned-Alignments/Weinell_TargetLoci_Snakes_Final_targetCDS_v3.fa"; TARG_CDS <- Biostrings::readDNAStringSet(TargetCDS.path,format="fasta")
length(TARG_CDS)
names(TARG_CDS)[1:10]
test <- do.call(rbind,strsplit(names(TARG_CDS),split="_"))
test <- strsplit(names(TARG_CDS),split="_")
range(lengths(test))
length(which(lengths(test)==5))
names(TARG_CDS)[which(lengths(test)==5)][1:10]
names(TARG_CDS)[which(lengths(test)==10)][1:10]
names(TARG_CDS)[which(lengths(test)==10)]
targetCDS.names   <- gsub("_.*","",gsub(".*_TargetCDS_of_","",names(TargetDNA_CDS.regions)))
targetCDS.names[1:10]
length(targetCDS.names)
targetCDS.names[1970:1983]
input.path <- "/Users/jeff/Documents/SequenceCapture/partitionedAlignments"
output.dir <- "/Users/jeff/Documents/SequenceCapture/partitionedAlignments"
input.path <- "/Users/jeff/Documents/SequenceCapture/alignments_WENames"
dir1  <- file.path(output.dir,"All_parts/alignmentFiles/")#
	dir2  <- file.path(output.dir,"All_parts/partitionFiles/")#
	dir3  <- file.path(output.dir,"CDS_only/alignmentFiles/")#
	dir4  <- file.path(output.dir,"CDS_only/partitionFiles/")#
	dir5  <- file.path(output.dir,"Upstream_noncoding/alignmentFiles/")#
	dir6  <- file.path(output.dir,"Downstream_noncoding/alignmentFiles/")#
	dir7  <- file.path(output.dir,"All_noncoding/alignmentFiles/")#
	dir8  <- file.path(output.dir,"All_noncoding/partitionFiles/")#
	dir9  <- file.path(output.dir,"CDS_FirstCodonPosition/alignmentFiles/")#
	dir10 <- file.path(output.dir,"CDS_SecondCodonPosition/alignmentFiles/")#
	dir11 <- file.path(output.dir,"CDS_ThirdCodonPosition/alignmentFiles/")#
	dir12 <- file.path(output.dir,"AminoAcids/alignmentFiles/")#
#
	subdirectories  <- c(dir1,dir2,dir3,dir4,dir5,dir6,dir7,dir8,dir9,dir10,dir11,dir12)#
	makeDirectories <- lapply(X=subdirectories,FUN=dir.check.create)
library(REEs)
file.exists(input.path)
input.path
dir.exists()
system(sprintf(" [ -f '%s' ] ",input.path))
system(sprintf(" [ -f '%s' ] && echo FALSE",input.path))
!system(sprintf(" [ -f '%s' ] ",input.path))
system(sprintf(" [ ! -f '%s' ] && exit 1 ",input.path))
!system(sprintf(" [ ! -f '%s' ] && exit 1 ",input.path))
dir.exists(input.path)
file.exists(input.path) && !dir.exists(input.path)
dir.exists(input.path)
input.alignment.filenames <- gtools::mixedsort(list.files(input.path,full.names=T))
input.alignment.filenames
ith.locus.start
input.alignment.filenames <- input.alignment.filenames [grep("WeinellEntry27.fa", input.alignment.filenames)]
input.alignment.filenames
ith.locus.start <- 1#
		ith.locus.end   <- 1
TargetDNA_CDS.regions       <- Biostrings::readDNAStringSet(TargetCDS.path,format="fasta")#
	### Read the table specifying which species the probes were designed from for each locus #
	bait.species.table          <- data.table::fread(bait.species.filename)
targetCDS.names   <- gsub("_.*","",gsub(".*_TargetCDS_of_","",names(TargetDNA_CDS.regions)))
input.alignment.shortnames  <- gsub(".phy|.fa|.fasta","",basename(input.alignment.filenames))
input.alignment.shortnames
shared.names                <- Reduce(intersect, list(input.alignment.shortnames,targetCDS.names))
length(shared.names)
shared.names
locus.names.omit=NULL
!is.null(locus.names.omit)
file.exists(file.path(output.dir,"partitioned_alignments_made.txt"))
alignments.made <- utils::read.table(file=file.path(output.dir,"partitioned_alignments_made.txt"), header=T, colClasses="character")
dim(alignments.made)
alignments.made[1:10,]
i=1
print(i)#
		locus.name.temp   <- shared.names[i]#
		print(locus.name.temp)
head(bait.species.table)
bait.species.temp <- bait.species.table$Species[bait.species.table$Bait==locus.name.temp]
length(bait.species.temp)
bait.species.temp
FILEPATHi <- input.alignment.filenames[input.alignment.shortnames==locus.name.temp]
FILEPATHi
novel            <- REEs::trimXN(Biostrings::DNAStringSet(x=gsub("-|\\?","",Biostrings::readDNAMultipleAlignment(FILEPATHi))))
novel
ref.type<-"DNA"
targetCDS.names[1]
locus.name.temp
grep(paste0("_",locus.name.temp,"_"))
paste0("_",locus.name.temp,"_")
grep(paste0("_",locus.name.temp,"_"),names(TargetDNA_CDS.regions))
reference.cds <- TargetDNA_CDS.regions[grep(paste0("_",locus.name.temp,"_"),names(TargetDNA_CDS.regions))]
reference.cds
names(reference.cds)
bait.species.temp
paste(bait.species.temp,names(reference.cds),sep="_")
bait.species.temp[1:10,]
bait.species.table[1:10,]
dim(bait.species.table)
length(TargetDNA_CDS.regions)
length(targetCDS.names)
bait.species.table[1:10,]
test <- bait.species.table$Species[match(gsub("_.*","_",gsub(".*_TargetCDS_of_","_",names(TargetDNA_CDS.regions))),bait.species.table$Bait)]
length(test)
test[1:10]
unlist(bait.species.table$Species)[match(gsub("_.*","_",gsub(".*_TargetCDS_of_","_",names(TargetDNA_CDS.regions))),unlist(bait.species.table$Bait))]
bait.species.table$Species[1]
WE_targnames <- gsub("_.*","_",gsub(".*_TargetCDS_of_","_",names(TargetDNA_CDS.regions)))
length(WE_targnames)
WE_targnames[1]
names(TargetDNA_CDS.regions)[1]
gsub(".*_TargetCDS_of_","_",names(TargetDNA_CDS.regions))[1]
WE_targnames <- gsub("_.*","_",gsub(".*_TargetCDS_of_","",names(TargetDNA_CDS.regions)))
WE_targnames[1]
WE_targnames <- paste0("_",gsub("_.*","_",gsub(".*_TargetCDS_of_","",names(TargetDNA_CDS.regions))))
WE_targnames[1]
WE_baitnames[1]
WE_baitnames <- unlist(bait.species.table$Bait)
WE_baitnames[1]
WE_targnames <- gsub("_.*","",gsub(".*_TargetCDS_of_","",names(TargetDNA_CDS.regions)))
WE_targnames[1]
targs_species <- unlist(bait.species.table$Species)[match(WE_targnames,WE_baitnames)]
targs_species[1:10]
targs_species <- gsub("_","-",unlist(bait.species.table$Species)[match(WE_targnames,WE_baitnames)])
targs_species[1:10]
newnames_targs <- paste(targs_species,WE_targnames,"_")
newnames_targs[1:10]
newnames_targs <- paste(targs_species,names(TargetDNA_CDS.regions),"_")
newnames_targs[1:10]
newnames_targs <- paste(targs_species,names(TargetDNA_CDS.regions),sep="_")
newnames_targs[1:10]
names(TargetDNA_CDS.regions) <- newnames_targs
class(TargetDNA_CDS.regions)
TargetDNA_CDS.regions
TargetDNA_CDS.regions[1]
names(TargetDNA_CDS.regions)[1:5-]
names(TargetDNA_CDS.regions)[1:50]
names(TargetDNA_CDS.regions)[1900:1983]
length(names(TargetDNA_CDS.regions))
any(is.na(bait.species.table$Species))
grep("WeinellEntry5179-",bait.species.table$Baits)
grep("WeinellEntry5179-",bait.species.table)
grep(".*WeinellEntry5179-.*",bait.species.table)
grep(".*WeinellEntry5179-.*",bait.species.table[,1])
grep(".*WeinellEntry5179-.*",unlist(bait.species.table[,1]))
grep(".*WeinellEntry5179-.*",as.character(bait.species.table[,1]))
as.character(bait.species.table[,1])[1]
match(WeinellEntry5179,bait.species.table[,1])
match("WeinellEntry5179",bait.species.table$Baits)
"WeinellEntry5179" %in% bait.species.table$Baits
unique(unlist(bait.species.table$Species))
match("WeinellEntry5179",unlist(bait.species.table$Baits))
grep("WeinellEntry5179",unlist(bait.species.table$Baits))
length(unlist(bait.species.table$Baits))
colnames(bait.species.table)
match("WeinellEntry5179",WE_baitnames)
bait.species.table[match("WeinellEntry5179",WE_baitnames),]
length(unique(targs_species))
unique(targs_species)
WE_targnames   <- gsub("[_-].*","",gsub(".*_TargetCDS_of_","",names(TargetDNA_CDS.regions)))
"WeinellEntry5179" %in% WE_targnames
which(WE_targnames=="WeinellEntry5179")
WE_baitnames   <- unlist(bait.species.table$Bait)
targs_species  <- gsub("_","-",unlist(bait.species.table$Species)[match(WE_targnames,WE_baitnames)])
newnames_targs <- paste(targs_species,names(TargetDNA_CDS.regions),sep="_")
unique(targs_species)
which(is.na(targs_species)
which(is.na(targs_species))
names(TargetDNA_CDS.regions)[which(is.na(targs_species))]
test <- grep("WeinellEntry[0-9]+[-]_",names(TargetDNA_CDS.regions))
length(test)
test <- grep("WeinellEntry[0-9]+[-][ab]_",names(TargetDNA_CDS.regions))
length(test)
test
test <- names(TargetDNA_CDS.regions)[grep("WeinellEntry5179",names(TargetDNA_CDS.regions))]
test
test <- names(TargetDNA_CDS.regions)[grep("_WeinellEntry[0-9]+_",names(TargetDNA_CDS.regions))]
length(test)
length(names(TargetDNA_CDS.regions))
1983-1978
test <- names(TargetDNA_CDS.regions)[grep("_WeinellEntry[0-9]+_",names(TargetDNA_CDS.regions),invert=T)]
length(test)
test
"WeinellEntry5385" %in% WE_baitnames
which(WE_baitnames=="WeinellEntry5385")
TargetCDS.path="/Users/jeff/Documents/GitHub/SnakeCap/PostSequencing/Partitioned-Alignments/Weinell_TargetLoci_Snakes_Final_targetCDS_v3.fa"#
bait.species.filename="/Users/jeff/Documents/GitHub/SnakeCap/PostSequencing/Partitioned-Alignments/bait_species_table.txt"
TargetCDS  <- readDNAStringSet(TargetCDS.path)
length(names(TargetCDS))
WE_targnames   <- gsub("[_-].*","",gsub(".*_TargetCDS_of_","",names(TargetCDS)))
length(WE_targnames)
length(unique(WE_targnames))
bait.species.table <- as.matrix(read.table(bait.species.filename,sep="\t",header=T))
head(bait.species.table)
test <- grep("^WeinellEntry[0-9]+$", WE_targnames)
length(test)
test <- grep("^WeinellEntry[0-9]+$", WE_targnames,invert=T)
test
WE_targnames[test]
TargetCDS.path="/Users/jeff/Documents/GitHub/SnakeCap/PostSequencing/Partitioned-Alignments/Weinell_TargetLoci_Snakes_Final_targetCDS_v3.fa"
TargetCDS <- readDNAStringSet(TargetCDS.path)
WE_targnames   <- gsub("_.*","",gsub(".*_TargetCDS_of_","",names(TargetCDS)))
test <- grep("^WeinellEntry[0-9]+$", WE_targnames,invert=T)
length(test)
grep("WeinellEntry508b",names(TargetCDS))
names(TargetCDS)[grep("WeinellEntry508b",names(TargetCDS))]
test <- grep("^WeinellEntry[0-9]+$", WE_targnames,invert=T)
TargetCDS.path="/Users/jeff/Documents/GitHub/SnakeCap/PostSequencing/Partitioned-Alignments/Weinell_TargetLoci_Snakes_Final_targetCDS_v3.fa"
TargetCDS <- readDNAStringSet(TargetCDS.path)
WE_targnames   <- gsub("_.*","",gsub(".*_TargetCDS_of_","",names(TargetCDS)))
grep("^WeinellEntry[0-9]+$", WE_targnames,invert=T)
TargetCDS.path="/Users/jeff/Documents/GitHub/SnakeCap/PostSequencing/Partitioned-Alignments/Weinell_TargetLoci_Snakes_Final_targetCDS_v3.fa"
TargetCDS <- readDNAStringSet(TargetCDS.path)
WE_targnames   <- gsub("_.*","",gsub(".*_TargetCDS_of_","",names(TargetCDS)))
grep("^WeinellEntry[0-9]+$", WE_targnames,invert=T)
targs_species <- bait.species.table[match(WE_targnames,bait.species.table[1,]),2]
unique(targs_species)
head(bait.species.table)
WE_targnames[1:10]
all(WE_targnames %in% bait.species.table[,1])
rows <- match(WE_targnames,bait.species.table[,1])
any(is.na(rows))
length(rows)
any(is.na(bait.species.table[,2]))
targs_species <- bait.species.table[rows,2]
length(targs_species)
targs_species[1:10]
unique(targs_species)
names(TargetCDS)[1:10]
WE_targnames[1:10]
newnames_targs <- paste(targs_species,names(TargetCDS),sep="_")
newnames_targs[1:10]
TargetCDS_v2 <- TargetCDS
names(TargetCDS_v2) <- newnames_targs
class(TargetCDS_v2)
TargetCDS_v2
writeXStringSet(TargetCDS_v2,"/Users/jeff/Documents/GitHub/SnakeCap/PostSequencing/Partitioned-Alignments/Weinell_TargetLoci_Snakes_Final_targetCDS_v4.fa")
