#!/bin/bash
# usage: sbatch --nodes=1 --mem=20Gb --partition=sixhour --time=6:00:00 /panfs/pfs.local/home/j926w878/work/conda/snakecap/test6_v2.sh "/panfs/pfs.local/home/j926w878/scratch/scratch_v3/SequenceCapture/SnakeCap_AllSamples/blast_database10" "/panfs/pfs.local/home/j926w878/scratch/scratch_v3/SequenceCapture/SnakeCap_AllSamples/blast_database10/groupsMatrix_capVScap_capVStargets.txt"
# module load R
# module load anaconda
# conda activate py36

### Description: Creates a FASTA files with unaligned sequences for each group.

### Captured variables
BLASTDBDIR=$1
GROUPMATPATH=$2
SEQKITGROUPSPATH=${3:-"/panfs/pfs.local/home/j926w878/work/conda/snakecap/seqkit_groups.sh"}

### Variables that sometimes need to be changed
# GROUPSEQSDIR=$BLASTDBDIR"/groupseqs"
GROUPSEQSDIR=$BLASTDBDIR"/groupseqs"
TEMPDIR="$BLASTDBDIR""/tempseqs"              # sequences that were used to build the blast databases generated by 03-temp.sh
SAMPLESKEY=$BLASTDBDIR"/allsamples_key.txt"
GROUPEDALIASPATH=$BLASTDBDIR"/alias_groupedSeqs.txt"
UNGROUPEDALIASPATH=$BLASTDBDIR"/alias_ungroupedSeqs.txt"

# This produces the form that you want for the key file, except without the sequence names that dont belong to a group; need to get the ungrouped sequences by comparing to allseqs_key, and assign those to group0.
cat $GROUPMATPATH | awk '{gsub("\t","\tgroup")}1' | awk '{gsub("\"","")}1' | awk 'NR>1' | awk '{print $1"\t"$1"_"$2}' | sort -V > $GROUPEDALIASPATH

### Compares newnames.txt to $GROUPEDALIASPATH{$1} in a way like setdiff() in R, but uses the comm bash command
# creates a file with values from the first column of $GROUPMATPATH, removes double quotes, and removes the header line; the sort -V option behaves like the gtools::mixedsort R function, but shouldnt be used until after using comm
# cat $GROUPMATPATH | awk '{gsub("\"","")}1' | awk 'NR>1' | awk '{print $1}' | sort > $BLASTDBDIR"/groupedSeqs.txt"
cat $GROUPMATPATH | awk '{gsub("\"","")}1' | awk 'NR>1{print $1}' | sort > $BLASTDBDIR"/groupedSeqs.txt"
# creates a file with the set of unique samples in $GROUPMATPATH; keeps the underscore so that partial matches (e.g., sample1 and sample10) do not cause confusion.
# cat $GROUPMATPATH | awk '{gsub("\"","")}1' | awk 'NR>1' | awk '{print $1}' | awk '{gsub("_.+","_")}1' | sort -V | uniq > $BLASTDBDIR"/samplesWithGroupedSeqs.txt"
cat $GROUPMATPATH | awk '{gsub("\"","")}1' | awk 'NR>1{print $1}' | awk '{gsub("_.+","_")}1' | sort -V | uniq > $BLASTDBDIR"/samplesWithGroupedSeqs.txt"
# creates a file with the lines of newnames.txt for samples present in GROUPMATPATH.
grep -f $BLASTDBDIR"/samplesWithGroupedSeqs.txt" $BLASTDBDIR"/newnames.txt" | sort > $BLASTDBDIR"/AllSequenceNamesForSamplesWithGroupedSeqs.txt"
# creates a file with the names of the ungrouped sequences on seperate lines for the samples with at least one grouped sequence; -3 flag means to suppress lines shared in both of the input files; --check-order means to check that the lines are correctly sorted, --nocheck-order means do not check the order, which is what we want because we sorted in different way than expected by comm
comm -3 --check-order $BLASTDBDIR"/AllSequenceNamesForSamplesWithGroupedSeqs.txt" $BLASTDBDIR"/groupedSeqs.txt" | sort -V > $BLASTDBDIR"/ungroupedSeqs.txt"
### The sum of the number of lines in ungroupedSeqs and groupedSeqs is equal the number of lines in AllSequenceNamesForSamplesWithGroupedSeqs.txt, indicating that comm did what we wanted
# creates a file with a structure like $ALIASPATH, but only includes the ungrouped sequences; "_ungrouped" will be appended to the names.
cat $BLASTDBDIR"/ungroupedSeqs.txt" | awk '{print $1"\t"$1"_ungrouped"}' > $UNGROUPEDALIASPATH

# concatenate $ALIASPATH and $UNGROUPEDALIASPATH
cat $GROUPEDALIASPATH $UNGROUPEDALIASPATH | sort -V > $BLASTDBDIR"/alias.txt"
# Use seqkit to create a copy of the set of fasta files in tempseqs for the samples with at least one grouped sequence, but replace sequence IDs using the names in column two of alias.txt
[ ! -d "$GROUPSEQSDIR" ] && mkdir $GROUPSEQSDIR
SAMPLES=$(cat $BLASTDBDIR"/samplesWithGroupedSeqs.txt" | awk '{gsub("_","")}1')
NUMSAMPLES=$(echo $SAMPLES | wc -w)

### Create a directory for each sample i, and within each directory i create a fasta file with sequences for sample i group j
for VARi in $(seq 1 $NUMSAMPLES) ; do
  SAMPLEi=$(echo $SAMPLES | awk -v i="$VARi" '{print $i}')
  NAMEi=$(grep -w $SAMPLEi $SAMPLESKEY | awk '{print $2}')
  SEQPATHi=$(find $TEMPDIR -name "*"$NAMEi"*")
  sbatch --nodes=1 --partition=sixhour $SEQKITGROUPSPATH $BLASTDBDIR $GROUPSEQSDIR $SAMPLEi $SAMPLESKEY $SEQPATHi
done


